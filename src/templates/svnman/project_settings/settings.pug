| {% extends 'svnman/project_settings/svnman_layout.html'  %}

| {% block svnman_container %}
#node-edit-form
	#node-edit-form
		p This project has a Subversion repository
		p To do a checkout, use:
		p
			code svn checkout {{ svn_url }} my_repo
		p
			button.btn.btn-danger(onclick='deleteRepo()') Delete Subversion repository

		h4 Repository Access

		.row
			.col-md-6
				.access-users-search
					.form-group
						input#user-search.form-control(
							name='contacts',
							type='text',
							placeholder='Grant user access by name')

				ul.access-users-list
					| {% for user in svn_users %}
					li.access-users-item(
						data-user-id="{{ user['_id'] }}",
						class="{% if current_user.objectid == user['_id'] %}self{% endif %}")
						.access-users-avatar
							img(src="{{ user['avatar'] }}")
						.access-users-details
							span.access-users-name
								| {{ user['full_name'] }}
								| {% if current_user.objectid == user['_id'] %}
								small (You)
								| {% endif %}
							span.access-users-extra {{ user['username'] }}
						.access-users-action
							| {# Only allow deletion if we are: admin, project users, or current_user in the team #}
							| {% if can_abandon_manager %}
							| {%     if current_user.objectid == user['_id'] %}
							button.user-remove(title="Revoke your own access")
								i.pi-trash
							| {%     else %}
							button.user-remove(title="Revoke access of this user")
								i.pi-trash
							| {%     endif %}
							| {% endif %}

					| {% endfor %}

			.col-md-6
				.access-users-info
					h4 What can these users do?
					p.
						Users in this list have read/write access to the Subversion repository. It
						is not possible to allow read-only access.
					p.
						Their password is <em>not</em> their Blender ID password, but has to be set
						separately.




| {% endblock svnman_container %}

| {% block footer_scripts %}
script.
	var algolia_application_id = '{{config.ALGOLIA_USER}}'
	var algolia_public_key = '{{config.ALGOLIA_PUBLIC_KEY}}';
	var algolia_index_users = '{{config.ALGOLIA_INDEX_USERS}}';

	$('#user-search').userSearch(algolia_application_id, algolia_public_key, algolia_index_users,
		function(event, hit, dataset) {
			var $existing = $('li.access-users-item[data-user-id="' + hit.objectID + '"]');
			if ($existing.length) {
				$existing
					.addClass('active')
					.delay(1000)
					.queue(function() {
						console.log('no');
						$existing.removeClass('active');
						$existing.dequeue();
					});
				toastr.info('User already has access');
			}
			else {
				grantUser(hit.objectID);
			}
		}
	);

	function grantUser(user_id) {
		console.log('grant to', user_id);
		$.ajax({
			url: '{{ url_for( "svnman.grant_access", project_url=project.url, repo_id=repo_id) }}',
			data: {user_id: user_id},
			method: 'POST',
		})
		.done(function() {
			window.location.reload();
		})
		.fail(function(err) {
			if (err.status == 451) {
				toastr.error("This user has no Subversion usage in their subscription package.");
				return;
			}
			var err_elt = xhrErrorResponseElement(err, 'Error granting access: ');
			toastr.error(err_elt);
		});
	}

	function deleteRepo() {
		if (!confirm('Are you sure you want to delete this repository? This CANNOT be undone! You WILL loose this data.'))
			return;

		$.ajax({
			url: '{{ url_for( "svnman.delete_repo", project_url=project.url, repo_id=repo_id) }}',
			method: 'POST',
		})
		.done(function() {
			window.location.reload();
		})
		.fail(function(err) {
			var err_elt = xhrErrorResponseElement(err, 'Error deleting your repository: ');
			toastr.error(err_elt);
		});
	}
| {% endblock %}
